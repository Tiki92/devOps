
- name: test
  hosts: localhost
  gather_facts: no
  tasks:
    - set_fact:
         home_dir: "{{ lookup('env', 'HOME') }}"
      become: true

    - name: Create key pair
      ec2_key:
        name: ansible-keypair
        key_material: "{{ lookup('file', '{{ home_dir }}/.ssh/id_rsa.pub') }}"

    - name: create a cloudformation stack
      cloudformation:
        stack_name: "ansible-cloudformation"
        state: "present"
        disable_rollback: true
        template: "devOps_stack.yml"
        tags:
          Stack: "ansible-cloudformation"

    - cloudformation_info:
        stack_name: ansible-cloudformation
      register: output

    - debug:
        var: output.cloudformation["ansible-cloudformation"].stack_outputs.ControllerIp
    
    - debug:
        var: output.cloudformation["ansible-cloudformation"].stack_outputs.HostIp

    - name: Add controller public IP to group
      add_host: hostname={{ output.cloudformation["ansible-cloudformation"].stack_outputs.ControllerIp }} groups=ec2controller

    - name: Add host private ip to group
      add_host: hostname={{ output.cloudformation["ansible-cloudformation"].stack_outputs.HostIp }} groups=ec2host

    - name: accept new ssh fingerprints                                         
      shell: ssh-keyscan -H {{ output.cloudformation["ansible-cloudformation"].stack_outputs.ControllerIp }} >> ~/.ssh/known_hosts 

- hosts: ec2controller
  user: ec2-user
  become: true
  gather_facts: no
  vars:
    users:
    - jenkins
  tasks:

    - name: Get home directory
      set_fact:
        home_dir: "{{ lookup('env', 'HOME') }}"

    - name: "Create user accounts and add users to groups"
      user:
        name: "{{ item }}"
        groups: "adm,ec2-user"
      with_items: "{{ users }}"

    - name: "Add authorized keys"
      authorized_key:
        user: "{{ item }}"
        key: "{{ lookup('file', '{{ home_dir }}/.ssh/id_rsa.pub') }}"
      with_items: "{{ users }}"

    - name: "Allow admin users to sudo without a password"
      lineinfile:
        dest: "/etc/sudoers"
        state: "present"
        regexp: "^%adm"
        line: "%adm ALL=(ALL) NOPASSWD: ALL"

- hosts: ec2controller
  user: jenkins
  become: true
  gather_facts: no
  roles:
    - jenkins
  tags: jenkins